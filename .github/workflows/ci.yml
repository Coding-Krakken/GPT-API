name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 httpx
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 routes/ utils/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 routes/ utils/ --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
    
    - name: Run security tests
      run: |
        python -c "from utils.security import safe_subprocess_run, CommandSanitizer; print('✅ Security module loaded')"
        python -c "
        from utils.security import CommandSanitizer
        import sys
        try:
            CommandSanitizer.sanitize_command('rm -rf /')
            sys.exit(1)  # Should not reach here
        except ValueError:
            print('✅ Security validation working')
        "
    
    - name: Test with pytest
      run: |
        python -m pytest tests/ --cov=routes --cov=utils --cov-report=xml --cov-report=term-missing --tb=short
      env:
        API_KEY: test-key-for-ci
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install security scanning tools
      run: |
        pip install bandit safety
    
    - name: Run Bandit Security Scan
      run: |
        bandit -r routes/ utils/ -f json -o bandit-report.json || true
        bandit -r routes/ utils/ --severity-level medium
    
    - name: Run Safety Security Scan
      run: |
        safety check --json --output safety-report.json || true
        safety check

  build:
    needs: [test, security]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test API startup
      run: |
        timeout 10 python -m uvicorn main:app --host 0.0.0.0 --port 8000 &
        sleep 5
        curl -f http://localhost:8000/docs || exit 1
        echo "✅ API starts successfully"
      env:
        API_KEY: test-key